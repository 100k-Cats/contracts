{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_bensyc",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "expected",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "provided",
            "type": "bytes32"
          }
        ],
        "name": "InvalidNamehash",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "str",
            "type": "string"
          }
        ],
        "name": "InvalidParentDomain",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "id",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "index",
            "type": "uint256"
          }
        ],
        "name": "InvalidTokenID",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "string[]",
            "name": "urls",
            "type": "string[]"
          },
          {
            "internalType": "bytes",
            "name": "callData",
            "type": "bytes"
          },
          {
            "internalType": "bytes4",
            "name": "callbackFunction",
            "type": "bytes4"
          },
          {
            "internalType": "bytes",
            "name": "extraData",
            "type": "bytes"
          }
        ],
        "name": "OffchainLookup",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "expected",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "check",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          },
          {
            "internalType": "uint256",
            "name": "blknum",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "result",
            "type": "bytes"
          }
        ],
        "name": "RequestError",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "ResolverNotSet",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "resolver",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "_call",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "_error",
            "type": "bytes"
          }
        ],
        "name": "StaticCallFailed",
        "type": "error"
      },
      {
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "name": "BENSYC",
        "outputs": [
          {
            "internalType": "contract iBENSYC",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DESTROY",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "ENS",
        "outputs": [
          {
            "internalType": "contract iENS",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "PrimaryResolver",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "baseHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "name",
            "type": "bytes"
          }
        ],
        "name": "dnsDecode",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "_callhash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "getResult",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "primaryDomainHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "name",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "resolve",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "response",
            "type": "bytes"
          },
          {
            "internalType": "bytes",
            "name": "extraData",
            "type": "bytes"
          }
        ],
        "name": "resolveWithoutProof",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "secondaryDomainHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "secondaryLabelHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "sig",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdrawEther",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_bal",
            "type": "uint256"
          }
        ],
        "name": "withdrawToken",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "dnsDecode(bytes)": {
          "details": ": dnsDecode()",
          "params": {
            "name": ": name"
          }
        },
        "getResult(bytes32,bytes)": {
          "details": ": getResult()",
          "params": {
            "_callhash": ": _callhash",
            "data": ": data"
          }
        },
        "resolve(bytes,bytes)": {
          "details": ": resolve()",
          "params": {
            "data": ": data",
            "name": ": name"
          }
        },
        "withdrawEther()": {
          "details": ": withdraw ether only to Dev (or multi-sig)"
        },
        "withdrawToken(address,uint256)": {
          "details": ": to be used in case some tokens get locked in the contract",
          "params": {
            "_bal": ": amount to release",
            "_token": ": token to release"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "resolveWithoutProof(bytes,bytes)": {
          "notice": "Callback used by CCIP read compatible clients to verify and parse the response."
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/XCCIP.sol": "XCCIP"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 6666
    },
    "remappings": [
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/"
    ]
  },
  "sources": {
    "src/Interface.sol": {
      "keccak256": "0xfc6beeebd98ac1af96e397169367c21d5fc1d437ab3b1bcbebf438bcc3e44f80",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://b74d51af382e378a430bbefa8171960e1c82cd9e8ad70f478d53a2e11381a3d1",
        "dweb:/ipfs/QmPAXwhc6JvQBgbcSNpeeRzMBuwJf7SoZiLpiEkZXD7sFV"
      ]
    },
    "src/Util.sol": {
      "keccak256": "0x591775a2a931be3a66685902710b7de65bbe69a848dd2ade299c0f4bbe1773dd",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://5a4b49393e31ccb57ecf89a2924efde81ac4c7b40c4c17d1129b6675a1b8c37f",
        "dweb:/ipfs/QmR9VfUNE7WEduVRrRoQetUdtTkqweMhzew5L4HDsEC43i"
      ]
    },
    "src/XCCIP.sol": {
      "keccak256": "0x202b75d5c75dde6cc7fce80a874e18716a2fa80e96b068d49c0759cfce429375",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://4b5d28f6e52ed1f024a0885bbeffea706cdf8b1c75025e8c449859c9b7c789c6",
        "dweb:/ipfs/QmRbKo54nJJxf9LRSjUrZjjKM3ziodGjXqPUTSDg9cRqVP"
      ]
    }
  },
  "version": 1
}