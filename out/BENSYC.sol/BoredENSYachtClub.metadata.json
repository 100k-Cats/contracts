{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_resolver",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_maxSupply",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "name": "ERC721IncompatibleReceiver",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "size",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "yourSize",
            "type": "uint256"
          }
        ],
        "name": "InsufficientEtherSent",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "InvalidTokenID",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MintEnded",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MintingPaused",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "NotSubdomainOwner",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_dev",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_you",
            "type": "address"
          }
        ],
        "name": "OnlyDev",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "OversizedBatch",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "Unauthorized",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "ZeroAddress",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "approved",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "_owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "name": "DESTROY",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DefaultResolver",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "Dev",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DomainHash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "ENS",
        "outputs": [
          {
            "internalType": "contract iENS",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "ID2Labelhash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "ID2Namehash",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "Namehash2ID",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "active",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "approved",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "batchSize",
            "type": "uint256"
          }
        ],
        "name": "batchMint",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "contractURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "maxSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "metaIPFS",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "mint",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "mintPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "owner",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "royalty",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_salePrice",
            "type": "uint256"
          }
        ],
        "name": "royaltyInfo",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_contractURI",
            "type": "string"
          }
        ],
        "name": "setContractURI",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_resolver",
            "type": "address"
          }
        ],
        "name": "setDefaultResolver",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "sig",
            "type": "bytes4"
          },
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          }
        ],
        "name": "setInterface",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_royalty",
            "type": "uint256"
          }
        ],
        "name": "setRoyalty",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "toggleActive",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "newDev",
            "type": "address"
          }
        ],
        "name": "transferOwnership",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdrawEther",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          }
        ],
        "name": "withdrawToken",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "author": "0xc0de4c0ffee, sshmatrix",
      "kind": "dev",
      "methods": {
        "ID2Namehash(uint256)": {
          "details": "returns namehash of token ID",
          "params": {
            "id": ": token ID"
          },
          "returns": {
            "_0": ": namehash of corresponding subdomain"
          }
        },
        "approve(address,uint256)": {
          "details": ": grants approval for a token ID",
          "params": {
            "approved": ": operator address to be approved",
            "id": ": token ID"
          }
        },
        "batchMint(uint256)": {
          "details": ": batchMint() function for sudomains",
          "params": {
            "batchSize": ": number of subdomains to mint in the batch (maximum batchSize = 12)"
          }
        },
        "constructor": {
          "details": "Constructor"
        },
        "mint()": {
          "details": "mint() function for single sudomain"
        },
        "owner()": {
          "details": ": get owner of contract",
          "returns": {
            "_0": ": address of controlling dev or multi-sig wallet"
          }
        },
        "ownerOf(uint256)": {
          "details": "EIP721: returns owner of token ID",
          "params": {
            "id": ": token ID"
          },
          "returns": {
            "_0": ": address of owner"
          }
        },
        "royaltyInfo(uint256,uint256)": {
          "details": ": royalty payment to Dev (or multi-sig)",
          "params": {
            "_salePrice": ": sale price",
            "id": ": token ID"
          },
          "returns": {
            "_0": ": ether amount to be paid as royalty to Dev (or multi-sig)"
          }
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": ": safeTransferFrom function",
          "params": {
            "from": ": from address",
            "id": ": token ID",
            "to": ": to address"
          }
        },
        "safeTransferFrom(address,address,uint256,bytes)": {
          "details": ": safeTransferFrom function with extra data",
          "params": {
            "data": ": extra data",
            "from": ": from address",
            "id": ": token ID",
            "to": ": to address"
          }
        },
        "setApprovalForAll(address,bool)": {
          "details": ": sets Controller (for all tokens)",
          "params": {
            "approved": ": bool to set",
            "operator": ": operator address to be set as Controller"
          }
        },
        "setContractURI(string)": {
          "details": ": sets OpenSea contractURI",
          "params": {
            "_contractURI": ": URI value"
          }
        },
        "setDefaultResolver(address)": {
          "details": ": sets Default Resolver",
          "params": {
            "_resolver": ": resolver address"
          }
        },
        "setInterface(bytes4,bool)": {
          "details": ": setInterface",
          "params": {
            "sig": ": signature",
            "value": ": boolean"
          }
        },
        "setRoyalty(uint256)": {
          "details": "EIP2981 royalty standard",
          "params": {
            "_royalty": ": royalty (1 = 1 %)"
          }
        },
        "toggleActive()": {
          "details": ": Toggle if contract is active or paused, only Dev can toggle"
        },
        "tokenURI(uint256)": {
          "details": ": generate metadata path corresponding to token ID",
          "params": {
            "id": ": token ID"
          },
          "returns": {
            "_0": ": IPFS path to metadata directory"
          }
        },
        "transferFrom(address,address,uint256)": {
          "details": ": transfer function",
          "params": {
            "from": ": from address",
            "id": ": token ID",
            "to": ": to address"
          }
        },
        "transferOwnership(address)": {
          "details": ": transfer contract ownership to new Dev",
          "params": {
            "newDev": ": new Dev"
          }
        },
        "withdrawEther()": {
          "details": ": withdraw ether to multisig, anyone can trigger"
        },
        "withdrawToken(address)": {
          "details": ": to be used in case some tokens get locked in the contract",
          "params": {
            "token": ": token to release"
          }
        }
      },
      "stateVariables": {
        "DomainHash": {
          "details": ": namehash of 'boredensyachtclub.eth'"
        }
      },
      "title": "BENSYC Core",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/BENSYC.sol": "BoredENSYachtClub"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 6666
    },
    "remappings": [
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/"
    ]
  },
  "sources": {
    "src/BENSYC.sol": {
      "keccak256": "0x08b0306f5ff0652728bc1bb171d87093b382826909bdcf9ded75c24033bb39c4",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://72296c8520722396f537b3adbcef5f903578e0c0683bb1d95dd9968bf56e57af",
        "dweb:/ipfs/QmXo91N8QpF6shWQbWG1RE5xV1PCdRMyNQ2ZEDsjM8faEU"
      ]
    },
    "src/Base.sol": {
      "keccak256": "0x1258d7f3c60805ecfec9bbdc43366747e9d4dc29432c53a846f4d02549e783ae",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://cdf83da60f663c82702b7eafe469d556586a6be49c7adc8d057bc5e6599487c1",
        "dweb:/ipfs/QmUAbJaUbcfrQbWYuJCjmbq1kLVBVKzXsuPwm7MRo7YQUp"
      ]
    },
    "src/Interface.sol": {
      "keccak256": "0x1c30b7bf9c633f1ac0e5121e3b5973ec40dfd71fe50b0eddf9f1d740e14c9ddc",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://1535b06ae10b00b959bf111c403457bfb42c50ae81111cb809064707a3c3d320",
        "dweb:/ipfs/QmP4JtzXF3WoxUdkdRM41h9Lk1UWXkzCjLfQ3RWYWoaLLx"
      ]
    },
    "src/Util.sol": {
      "keccak256": "0x53c587dce24bb2fbc62d82f72778b2d96327371c7d8dfe296f4e20f059489a8d",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://a72c00f7688ace5f4c33786dd513398930520474afb88e4e86c27afced8b3503",
        "dweb:/ipfs/QmV7vUgtgtN8Ssq1Zxuz4e3aecNVJy7mqEHPuJg1UrKHv5"
      ]
    }
  },
  "version": 1
}