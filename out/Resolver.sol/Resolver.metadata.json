{
  "compiler": {
    "version": "0.8.16+commit.07a7930e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_bensyc",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "InvalidTokenID",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "NotSubdomainOwner",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_dev",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "_you",
            "type": "address"
          }
        ],
        "name": "OnlyDev",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "id",
            "type": "uint256"
          }
        ],
        "name": "Unauthorized",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "addr",
            "type": "address"
          }
        ],
        "name": "AddressChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "coinType",
            "type": "uint256"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "newAddress",
            "type": "bytes"
          }
        ],
        "name": "AddressChangedForCoin",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "_contenthash",
            "type": "bytes"
          }
        ],
        "name": "ContenthashChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "name",
            "type": "string"
          }
        ],
        "name": "NameChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "x",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "y",
            "type": "bytes32"
          }
        ],
        "name": "PubkeyChanged",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "indexed": true,
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "value",
            "type": "string"
          }
        ],
        "name": "TextRecordChanged",
        "type": "event"
      },
      {
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "name": "BENSYC",
        "outputs": [
          {
            "internalType": "contract iBENSYC",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "DefaultContenthash",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "ENS",
        "outputs": [
          {
            "internalType": "contract iENS",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          }
        ],
        "name": "addr",
        "outputs": [
          {
            "internalType": "address payable",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "coinType",
            "type": "uint256"
          }
        ],
        "name": "addr",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "_addr",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          }
        ],
        "name": "contenthash",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "_hash",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          }
        ],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ],
        "name": "pubkey",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "x",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "y",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "coinType",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_addr",
            "type": "bytes"
          }
        ],
        "name": "setAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "_addr",
            "type": "address"
          }
        ],
        "name": "setAddress",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "_hash",
            "type": "bytes"
          }
        ],
        "name": "setContenthash",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes",
            "name": "_content",
            "type": "bytes"
          }
        ],
        "name": "setDefaultContenthash",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "value",
            "type": "string"
          }
        ],
        "name": "setDefaultText",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "sig",
            "type": "bytes4"
          },
          {
            "internalType": "bool",
            "name": "value",
            "type": "bool"
          }
        ],
        "name": "setInterface",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "_name",
            "type": "string"
          }
        ],
        "name": "setName",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "x",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "y",
            "type": "bytes32"
          }
        ],
        "name": "setPubkey",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "key",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "value",
            "type": "string"
          }
        ],
        "name": "setText",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "node",
            "type": "bytes32"
          },
          {
            "internalType": "string",
            "name": "key",
            "type": "string"
          }
        ],
        "name": "text",
        "outputs": [
          {
            "internalType": "string",
            "name": "value",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "withdrawEther",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "token",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "bal",
            "type": "uint256"
          }
        ],
        "name": "withdrawToken",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "DefaultContenthash()": {
          "details": ": default contenthash (encoded from IPNS hash)"
        },
        "addr(bytes32)": {
          "details": ": default subdomain to owner if no address is set for Ethereum [60]",
          "params": {
            "node": ": sundomain"
          },
          "returns": {
            "_0": ": resolved address"
          }
        },
        "addr(bytes32,uint256)": {
          "details": ": resolve subdomain addresses for <coin>; if no ethereum address [60] is set, resolve to owner",
          "params": {
            "coinType": ": <coin>",
            "node": ": sundomain"
          },
          "returns": {
            "_addr": ": resolved address"
          }
        },
        "contenthash(bytes32)": {
          "details": ": return default contenhash if no contenthash set",
          "params": {
            "node": ": subdomain"
          }
        },
        "name(bytes32)": {
          "details": ": get default name at mint",
          "params": {
            "node": ": subdomain"
          },
          "returns": {
            "_name": ": default name"
          }
        },
        "setAddress(bytes32,address)": {
          "details": ": change address of subdomain",
          "params": {
            "_addr": ": new address",
            "node": ": subdomain"
          }
        },
        "setAddress(bytes32,uint256,bytes)": {
          "details": ": change address of subdomain for <coin>",
          "params": {
            "coinType": ": <coin>",
            "node": ": subdomain"
          }
        },
        "setContenthash(bytes32,bytes)": {
          "details": ": change contenthash of subdomain",
          "params": {
            "_hash": ": new contenthash",
            "node": ": subdomain"
          }
        },
        "setDefaultContenthash(bytes)": {
          "details": ": sets default contenthash",
          "params": {
            "_content": ": default contenthash to set"
          }
        },
        "setDefaultText(string,string)": {
          "details": ": set default text record <onlyDev>",
          "params": {
            "key": ": key to change",
            "value": ": value to set"
          }
        },
        "setInterface(bytes4,bool)": {
          "details": ": setInterface",
          "params": {
            "sig": ": signature",
            "value": ": boolean"
          }
        },
        "setName(bytes32,string)": {
          "details": ": change name record",
          "params": {
            "_name": ": new name",
            "node": ": subdomain"
          }
        },
        "setPubkey(bytes32,bytes32,bytes32)": {
          "details": ": change public key record",
          "params": {
            "node": ": subdomain",
            "x": ": x-coordinate on elliptic curve",
            "y": ": y-coordinate on elliptic curve"
          }
        },
        "setText(bytes32,string,string)": {
          "details": ": change text record",
          "params": {
            "key": ": key to change",
            "node": ": subdomain",
            "value": ": value to set"
          }
        },
        "text(bytes32,string)": {
          "details": ": get text records",
          "params": {
            "key": ": key to query",
            "node": ": subdomain"
          },
          "returns": {
            "value": ": value"
          }
        },
        "withdrawEther()": {
          "details": ": withdraw ether only to Dev (or multi-sig)"
        },
        "withdrawToken(address,uint256)": {
          "details": ": to be used in case some tokens get locked in the contract",
          "params": {
            "bal": ": token balance to withdraw",
            "token": ": token to release"
          }
        }
      },
      "title": "BENSYC Resolver",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "DefaultContenthash()": {
          "notice": ": encoder: https://gist.github.com/sshmatrix/6ed02d73e439a5773c5a2aa7bd0f90f9"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "src/Resolver.sol": "Resolver"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 6666
    },
    "remappings": [
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/"
    ]
  },
  "sources": {
    "src/Interface.sol": {
      "keccak256": "0x1c30b7bf9c633f1ac0e5121e3b5973ec40dfd71fe50b0eddf9f1d740e14c9ddc",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://1535b06ae10b00b959bf111c403457bfb42c50ae81111cb809064707a3c3d320",
        "dweb:/ipfs/QmP4JtzXF3WoxUdkdRM41h9Lk1UWXkzCjLfQ3RWYWoaLLx"
      ]
    },
    "src/Resolver.sol": {
      "keccak256": "0x3cc2c36ce6c82627052b9e0dad4d70b49fe46d1f24802bcabeb9ab2442cc63b8",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://d0631f2a8d843053f990932d9e77e415a9147027adb272bc705b7ce6f51a7d98",
        "dweb:/ipfs/QmS76gjwW4Bs9mMkKuzBzXdCPbGuhTyd4zwu8C6Lr5bpiG"
      ]
    },
    "src/Util.sol": {
      "keccak256": "0x53c587dce24bb2fbc62d82f72778b2d96327371c7d8dfe296f4e20f059489a8d",
      "license": "WTFPL v6.9",
      "urls": [
        "bzz-raw://a72c00f7688ace5f4c33786dd513398930520474afb88e4e86c27afced8b3503",
        "dweb:/ipfs/QmV7vUgtgtN8Ssq1Zxuz4e3aecNVJy7mqEHPuJg1UrKHv5"
      ]
    }
  },
  "version": 1
}